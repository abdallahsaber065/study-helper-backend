"""initial

Revision ID: 806825172f35
Revises: 
Create Date: 2025-06-02 19:03:09.453234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '806825172f35'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_analytics',
    sa.Column('content_type', sa.Enum('file', 'summary', 'quiz', name='content_type_enum'), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('like_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('share_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('comment_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('content_type', 'content_id', name='pk_content_analytics')
    )
    op.create_table('question_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_tag_id'), 'question_tag', ['id'], unique=False)
    op.create_index(op.f('ix_question_tag_name'), 'question_tag', ['name'], unique=True)
    op.create_table('subject',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subject_id'), 'subject', ['id'], unique=False)
    op.create_index(op.f('ix_subject_name'), 'subject', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('role', sa.Enum('user', 'admin', 'moderator', name='user_role_enum'), server_default='user', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('ai_api_key',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_api_key', sa.Text(), nullable=False),
    sa.Column('provider_name', sa.Enum('OpenAI', 'Google', 'Other', name='ai_provider_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('encrypted_api_key')
    )
    op.create_index(op.f('ix_ai_api_key_id'), 'ai_api_key', ['id'], unique=False)
    op.create_table('community',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('community_code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_private', sa.Boolean(), server_default='false', nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_community_code'), 'community', ['community_code'], unique=True)
    op.create_index(op.f('ix_community_id'), 'community', ['id'], unique=False)
    op.create_index(op.f('ix_community_name'), 'community', ['name'], unique=True)
    op.create_table('content_comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.Enum('file', 'summary', 'quiz', name='content_type_enum'), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('comment_text', sa.Text(), nullable=False),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_edited', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['content_comment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_content_comment_type_id', 'content_comment', ['content_type', 'content_id'], unique=False)
    op.create_index(op.f('ix_content_comment_id'), 'content_comment', ['id'], unique=False)
    op.create_table('content_rating',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.Enum('file', 'summary', 'quiz', name='content_type_enum'), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Enum('one', 'two', 'three', 'four', 'five', name='rating_value_enum'), nullable=False),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'content_type', 'content_id', name='uq_user_content_rating')
    )
    op.create_index('idx_content_rating_type_id', 'content_rating', ['content_type', 'content_id'], unique=False)
    op.create_index(op.f('ix_content_rating_id'), 'content_rating', ['id'], unique=False)
    op.create_table('content_version',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content_type', sa.Enum('file', 'summary', 'quiz', name='content_type_enum'), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('version_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_type', 'content_id', 'version_number', name='uq_content_version_type_id_version')
    )
    op.create_index('idx_content_version_type_id', 'content_version', ['content_type', 'content_id'], unique=False)
    op.create_index(op.f('ix_content_version_id'), 'content_version', ['id'], unique=False)
    op.create_table('mcq_question',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('option_a', sa.Text(), nullable=False),
    sa.Column('option_b', sa.Text(), nullable=False),
    sa.Column('option_c', sa.Text(), nullable=True),
    sa.Column('option_d', sa.Text(), nullable=True),
    sa.Column('correct_option', sa.String(length=1), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('hint', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.Enum('Easy', 'Medium', 'Hard', 'Mix', name='difficulty_level_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.CheckConstraint("correct_option IN ('A', 'B', 'C', 'D')", name='ck_mcq_question_correct_option'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcq_question_id'), 'mcq_question', ['id'], unique=False)
    op.create_table('physical_file',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_hash', sa.String(length=100), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_index(op.f('ix_physical_file_file_hash'), 'physical_file', ['file_hash'], unique=True)
    op.create_index(op.f('ix_physical_file_id'), 'physical_file', ['id'], unique=False)
    op.create_table('user_free_api_usage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_provider', sa.Enum('OpenAI', 'Google', 'Other', name='ai_provider_enum'), nullable=False),
    sa.Column('usage_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_free_api_usage_id'), 'user_free_api_usage', ['id'], unique=False)
    op.create_table('user_preference',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email_notifications_enabled', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('default_theme', sa.String(length=50), server_default='light', nullable=False),
    sa.Column('default_content_filter_difficulty', sa.Enum('Easy', 'Medium', 'Hard', 'Mix', name='difficulty_level_enum'), nullable=True),
    sa.Column('preferences_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_preference_id'), 'user_preference', ['id'], unique=False)
    op.create_table('user_session',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_session_id'), 'user_session', ['id'], unique=False)
    op.create_index(op.f('ix_user_session_session_token'), 'user_session', ['session_token'], unique=True)
    op.create_table('community_member',
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'member', 'moderator', name='community_role_enum'), server_default='member', nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('community_id', 'user_id')
    )
    op.create_table('community_subject_file',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('physical_file_id', sa.Integer(), nullable=False),
    sa.Column('file_category', sa.Enum('lecture', 'section', 'exam', 'summary_material', 'general_resource', 'other', name='community_file_category_enum'), nullable=False),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['physical_file_id'], ['physical_file.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('community_id', 'subject_id', 'physical_file_id', name='uq_community_subject_file')
    )
    op.create_index(op.f('ix_community_subject_file_id'), 'community_subject_file', ['id'], unique=False)
    op.create_table('community_subject_link',
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('added_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['added_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('community_id', 'subject_id')
    )
    op.create_table('gemini_file_cache',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('physical_file_id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('gemini_file_uri', sa.String(length=255), nullable=False),
    sa.Column('gemini_display_name', sa.String(length=255), nullable=False),
    sa.Column('gemini_file_unique_name', sa.String(length=255), nullable=False),
    sa.Column('expiration_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['ai_api_key.id'], ),
    sa.ForeignKeyConstraint(['physical_file_id'], ['physical_file.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gemini_file_unique_name'),
    sa.UniqueConstraint('gemini_file_uri'),
    sa.UniqueConstraint('physical_file_id', 'api_key_id', 'gemini_file_uri', name='uq_gemini_file_cache')
    )
    op.create_index(op.f('ix_gemini_file_cache_id'), 'gemini_file_cache', ['id'], unique=False)
    op.create_table('mcq_question_tag_link',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['mcq_question.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['question_tag.id'], ),
    sa.PrimaryKeyConstraint('question_id', 'tag_id')
    )
    op.create_table('mcq_quiz',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.Enum('Easy', 'Medium', 'Hard', 'Mix', name='difficulty_level_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('is_public', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcq_quiz_id'), 'mcq_quiz', ['id'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.Enum('new_content', 'comment_reply', 'quiz_result', 'community_invite', 'mention', name='notification_type_enum'), nullable=False),
    sa.Column('related_content_type', sa.Enum('file', 'summary', 'quiz', name='content_type_enum'), nullable=True),
    sa.Column('related_content_id', sa.Integer(), nullable=True),
    sa.Column('related_community_id', sa.Integer(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['related_community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_user_read_created', 'notification', ['user_id', 'is_read', 'created_at'], unique=False)
    op.create_index(op.f('ix_notification_id'), 'notification', ['id'], unique=False)
    op.create_table('summary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('physical_file_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('full_markdown', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['physical_file_id'], ['physical_file.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_summary_id'), 'summary', ['id'], unique=False)
    op.create_table('user_file_access',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('physical_file_id', sa.Integer(), nullable=False),
    sa.Column('access_level', sa.String(length=20), server_default='read', nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('granted_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['physical_file_id'], ['physical_file.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'physical_file_id')
    )
    op.create_table('mcq_quiz_question_link',
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['mcq_question.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['mcq_quiz.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'question_id')
    )
    op.create_table('quiz_session',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('answers_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('time_taken_seconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['mcq_quiz.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_session_id'), 'quiz_session', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quiz_session_id'), table_name='quiz_session')
    op.drop_table('quiz_session')
    op.drop_table('mcq_quiz_question_link')
    op.drop_table('user_file_access')
    op.drop_index(op.f('ix_summary_id'), table_name='summary')
    op.drop_table('summary')
    op.drop_index(op.f('ix_notification_id'), table_name='notification')
    op.drop_index('idx_notification_user_read_created', table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_mcq_quiz_id'), table_name='mcq_quiz')
    op.drop_table('mcq_quiz')
    op.drop_table('mcq_question_tag_link')
    op.drop_index(op.f('ix_gemini_file_cache_id'), table_name='gemini_file_cache')
    op.drop_table('gemini_file_cache')
    op.drop_table('community_subject_link')
    op.drop_index(op.f('ix_community_subject_file_id'), table_name='community_subject_file')
    op.drop_table('community_subject_file')
    op.drop_table('community_member')
    op.drop_index(op.f('ix_user_session_session_token'), table_name='user_session')
    op.drop_index(op.f('ix_user_session_id'), table_name='user_session')
    op.drop_table('user_session')
    op.drop_index(op.f('ix_user_preference_id'), table_name='user_preference')
    op.drop_table('user_preference')
    op.drop_index(op.f('ix_user_free_api_usage_id'), table_name='user_free_api_usage')
    op.drop_table('user_free_api_usage')
    op.drop_index(op.f('ix_physical_file_id'), table_name='physical_file')
    op.drop_index(op.f('ix_physical_file_file_hash'), table_name='physical_file')
    op.drop_table('physical_file')
    op.drop_index(op.f('ix_mcq_question_id'), table_name='mcq_question')
    op.drop_table('mcq_question')
    op.drop_index(op.f('ix_content_version_id'), table_name='content_version')
    op.drop_index('idx_content_version_type_id', table_name='content_version')
    op.drop_table('content_version')
    op.drop_index(op.f('ix_content_rating_id'), table_name='content_rating')
    op.drop_index('idx_content_rating_type_id', table_name='content_rating')
    op.drop_table('content_rating')
    op.drop_index(op.f('ix_content_comment_id'), table_name='content_comment')
    op.drop_index('idx_content_comment_type_id', table_name='content_comment')
    op.drop_table('content_comment')
    op.drop_index(op.f('ix_community_name'), table_name='community')
    op.drop_index(op.f('ix_community_id'), table_name='community')
    op.drop_index(op.f('ix_community_community_code'), table_name='community')
    op.drop_table('community')
    op.drop_index(op.f('ix_ai_api_key_id'), table_name='ai_api_key')
    op.drop_table('ai_api_key')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_subject_name'), table_name='subject')
    op.drop_index(op.f('ix_subject_id'), table_name='subject')
    op.drop_table('subject')
    op.drop_index(op.f('ix_question_tag_name'), table_name='question_tag')
    op.drop_index(op.f('ix_question_tag_id'), table_name='question_tag')
    op.drop_table('question_tag')
    op.drop_table('content_analytics')
    # ### end Alembic commands ###
